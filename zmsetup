#!/bin/bash

# BASE VERSION - Begin
BASE_VERSION=0.01
# BASE VERSION - End

# SUFFIX VERSION - Begin
SUFFIX_VERSION=""
# SUFFIX VERSION - End

#PACKAGE VERSION - Begin
PACKAGE_VERSION=${BASE_VERSION}${SUFFIX_VERSION}
#PACKAGE VERSION - End

usage() {
cat <<EOF

  zmsetup ${PACKAGE_VERSION}
  Copyright Adrian Gibanel Lopez
  Licensed under the GNU PUBLIC LICENSE 3.0

  Usage: $0 [--conf=CONFIGURATION_FILE] [--install-needed-packages] [--distro=DISTRIBUTION] [--split-dns-bind]

  Example: $0 --conf=/home/user/myzimbra.conf
  Example: $0 --conf=/home/user/myzimbra.conf --install-needed-packages --distro=ubuntu1204
  Example: $0 --conf=/home/user/myzimbra.conf --split-dns-bind --distro=ubuntu1204



EOF

}

# Creates a sed partial string for substitution
# $1 is the FROM string
# $2 is the TO string
sed_partial_string()
{
	#local FILE="$1"
	local FROM="$1"
	local TO="$2"

echo "s~$FROM~$TO~g"

} # End of sed_partial_string()

function check_executable_file () {

    local PARAMETRES_NUMBER=1

    if [[ ! $# -eq ${PARAMETRES_NUMBER} ]]
    then
    echo -e -n "Incorrect number of parametres (check_executable_file)\n"
    echo -e -n "Aborting...\n"
    exit 1;
    fi

  local FILE_TO_CHECK=$1;

  if [[ ! -x ${FILE_TO_CHECK} ]]
  then
  echo -e -n "Required file: ${FILE_TO_CHECK} (executable) was not found\n"
  echo -e -n "Aborting...\n"
  exit 1;
  fi  


}


function check_exists_file () {

    local PARAMETRES_NUMBER=1

    if [[ ! $# -eq ${PARAMETRES_NUMBER} ]]
    then
    echo -e -n "Incorrect number of parametres (check_exists_file)\n"
    echo -e -n "Aborting...\n"
    exit 1;
    fi

  local FILE_TO_CHECK=$1;

  if [[ ! -e ${FILE_TO_CHECK} ]]
  then
  echo -e -n "Required file: ${FILE_TO_CHECK} (exists) was not found\n"
  echo -e -n "Aborting...\n"
  exit 1;
  fi  


}
 
### MAIN PROGRAM ### ### ### ### ### ### ### ###
################ ### ### ### ### ### ### ### ###
###              ### ### ### ### ### ### ### ###
###              ### ### ### ### ### ### ### ###

# Check the arguments.
for option in "$@"; do
    case "$option" in
    -h | --help)
	usage
	exit 0 ;;
    -v | --version)
	echo "zmsetup (${PACKAGE_VERSION})"
	exit 0 ;;
    --distro=*)
	DISTRO=`echo "$option" | sed 's/--distro=//'` ;;
    --conf=*)
	CONF=`echo "$option" | sed 's/--conf=//'` ;;
    --install-needed-packages )
	INSTALL_NEED_PACKAGES="yes" ;;
    # This is an undocumented feature...
    --debug)
	debug=yes ;;
    -*)
	echo "Unrecognized option \`$option'" 1>&2
	usage
	exit 1
	;;
    *)
	echo "Unrecognized option \`$option'" 1>&2
	usage
	exit 1
	;;
    esac
done

ZMSETUP_DEFAULT_CONF_FILE="/usr/local/etc/zmsetup/default.conf"
ZMSETUP_DEFAULT_CONFD="/usr/local/etc/zmsetup/conf.d/"
ZMSETUP_DEFAULT_LIB_DIR="/usr/local/lib/zmsetup"

# Read default custom file for this host

if [ -f "${ZMSETUP_DEFAULT_CONF_FILE}" ] ; then
  source "${ZMSETUP_DEFAULT_CONF_FILE}"
fi

# Read custom configuration files for this host
# if they exist
if [ -d "${ZMSETUP_DEFAULT_CONFD}" ] ; then
  source "${ZMSETUP_DEFAULT_CONFD}"/*\.conf
fi

# If a custom file is specified check if we can read it or abort
if [[ "x${CONF}" != x ]] ; then
  if [ ! -f "${CONF}" ] ; then
    echo -e -n "We cannot read configuration file: ${CONF}\n"
    echo -e -n "Aborting...\n"
    exit 1
  else
    source "${CONF}"
  fi
fi

# Check if lib dir exists and its common.sh file
if [ ! -f "${ZMSETUP_DEFAULT_LIB_DIR}"/"common.sh" ] ; then
  echo -e -n "We cannot read common.sh file: ${ZMSETUP_DEFAULT_LIB_DIR}/common.sh \n"
  echo -e -n "Check your zmsetup installation\n"
  echo -e -n "Aborting...\n"
  exit 1
fi

